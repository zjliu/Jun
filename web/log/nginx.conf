#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

#log_format tick '$msec^A$remote_addr^A$u_domain^A$u_url^A$u_title^A$u_referrer^A$u_sh^A$u_sw^A$u_cd^A$u_lang^A$u_utrace^A$u_account^A';

log_format tick '$remote_addr $u_userId $u_cookieId $u_refurl $u_url $u_pagesite $u_titleName $u_creenSize $u_brower $u_ubl $u_userOs $u_projectCode $u_nt';
#log_format tick '$msec^A$remote_addr^A$u_userId^A$u_cookieId^A$u_refurl^A$u_url^A$u_pagesite^A$u_titleName^A$u_creenSize^A$u_brower^A$u_ubl^A$u_userOs^A$u_projectCode^A$u_nt';
    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   html;
            index  index.html index.htm;
        }
         location /hello {
            default_type 'text/plain'; 
            content_by_lua 'ngx.say("hello, lua")'; 
        }
    location /1.gif { 
        default_type image/gif; 
        access_log off; 
        access_by_lua 
        " 
        local uid = ngx.var.cookie___utrace  
        if not uid then  
           uid = ngx.md5(ngx.now() .. ngx.var.remote_addr .. ngx.var.http_user_agent) 
        end   
        ngx.header['Set-Cookie'] = {'__utrace=' .. uid .. '; path=/'} 
           ngx.location.capture('/i-log?' .. ngx.var.args)  
        ";
        add_header Expires "Fri, 01 Jan 1980 00:00:00 GMT"; 
        add_header Pragma "no-cache";
        add_header Cache-Control "no-cache, max-age=0, must-revalidate";  
        empty_gif; 
        }  




        #error_page  404              /404.html;
location /i-log { 
 internal; 
 set_unescape_uri $u_userId $arg_userId;   
 set_unescape_uri $u_cookieId $arg_cookieId; 
 set_unescape_uri $u_refurl $arg_refurl;  
 set_unescape_uri $u_url $arg_url;  
 set_unescape_uri $u_pagesite $arg_pagesite;  
 set_unescape_uri $u_titleName $arg_titleName;  
 set_unescape_uri $u_creenSize $arg_creenSize;   
 set_unescape_uri $u_brower $arg_brower;   
 set_unescape_uri $u_ubl $arg_ubl;   
 set_unescape_uri $u_userOs $arg_userOs; 
 set_unescape_uri $u_projectCode $arg_projectCode;   
 set_unescape_uri $u_nt $arg_nt;
 log_subrequest on;     
 access_log /usr/local/haier_logs/ma.log tick;     
   echo ''; }

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443;
    #    server_name  localhost;

    #    ssl                  on;
    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_timeout  5m;

    #    ssl_protocols  SSLv2 SSLv3 TLSv1;
    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers   on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}